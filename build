#!/bin/bash

if [ $# != 1 ]; then
  echo usage: ./build target
  exit 1
fi


# termiate script on error:
set -e

cflags="-g"        # use for debugging
#cflags="-O2"       # use for optimised executable

function check_need_update {
  dest="$1"
  # target exists?
  [ -f "$dest" ] || return 0
  shift 1
  # target older than dependencies?
  for n in $@; do
    [ "$dest" -ot "$n" ] && return 0
  done
  # so target is up to date
  return 1
}


function compile {
  echo "[CC]" g++ -Wall $cflags -c -I. "$1" -o "${1%.*}.o"
  g++ -Wall $cflags -c -I. "$1" -o "${1%.*}.o"
}



function link {
  echo "[LD]" g++ $cflags *.o -o "$1"
  g++ $cflags *.o -o "$1"
}
  


# first argument is target executable:
target="$1"

# compile all C++ files into objects first:
for cpp in *.cpp; do
  check_need_update ${cpp%.*}.o $cpp && compile "$cpp"
done

# link all objects into target:
check_need_update "$target" *.o || exit 0
link "$target"

